import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from config import TOKEN, API_KEY
import random
import requests

bot = Bot(token=TOKEN)
dp = Dispatcher()

# API –∫–ª—é—á –¥–ª—è OpenWeatherMap
OWM_API_KEY = API_KEY


@dp.message(F.photo)
async def react_photo(message: Message):
    responses = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(responses)
    await message.answer(rand_answ)


@dp.message(Command('photo'))
async def photo(message: Message):
    photo_urls = [
        'https://i.pinimg.com/originals/d6/d6/0c/d6d60cd014d95b15a5a44cc0597f5947.jpg',
        'https://i.pinimg.com/736x/e6/9b/6f/e69b6feb89a524682cf149d527026893.jpg',
        'https://i.pinimg.com/originals/b5/90/b2/b590b2ed84ff824dd6276fe56b901c13.jpg'
    ]
    rand_photo = random.choice(photo_urls)
    await message.answer_photo(photo=rand_photo, caption='–≠—Ç–æ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')


@dp.message(F.text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
    await message.answer(
        '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–µ—Ä–æ–≥–∞—Ç–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫–∞; –Ω–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º')


@dp.message(Command('weather'))
async def handle_weather(message: Message):
    await message.answer("üå§Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã")


def get_weather_info(city):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ"""
    try:
        url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={OWM_API_KEY}&units=metric&lang=ru'
        response = requests.get(url, timeout=5)

        if response.status_code != 200:
            return "‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"

        data = response.json()
        temp = data['main']['temp']
        desc = data['weather'][0]['description']
        humidity = data['main']['humidity']
        wind = data['wind']['speed']

        return f"üå§Ô∏è *–ü–æ–≥–æ–¥–∞ –≤ {city}:*\nüå°Ô∏è {temp}¬∞C, {desc}\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüí® –í–µ—Ç–µ—Ä: {wind} –º/—Å"

    except Exception as e:
        return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã"


@dp.message(Command('help'))
async def help(message: Message):
    await message.answer(
        "–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n/start\n/help\n/photo\n/weather\n\n–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã")


@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, —è –±–æ—Ç!")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–≥–æ–¥—ã
@dp.message(F.text)
async def handle_text(message: Message):
    text = message.text.strip()

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if text.startswith('/') or text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?":
        return

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if len(text) < 2:
        return

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã
    weather_info = get_weather_info(text)
    await message.answer(weather_info, parse_mode='Markdown')


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())