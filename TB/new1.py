import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from config import TOKEN  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª config.py —Å TOKEN

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ó–∞–¥–∞–Ω–∏–µ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
start_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç")],
        [KeyboardButton(text="–ü–æ–∫–∞")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# –ó–∞–¥–∞–Ω–∏–µ 2: –ö–Ω–æ–ø–∫–∏ —Å URL-—Å—Å—ã–ª–∫–∞–º–∏
# –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /links
links_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏", url="https://www.bbc.com/russian")],
        [InlineKeyboardButton(text="üéµ –ú—É–∑—ã–∫–∞", url="https://open.spotify.com")],
        [InlineKeyboardButton(text="üìπ –í–∏–¥–µ–æ", url="https://www.youtube.com")]
    ]
)

# –ó–∞–¥–∞–Ω–∏–µ 3: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# –ù–∞—á–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
dynamic_keyboard_initial = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üîç –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ", callback_data="show_more")]
    ]
)

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–≤—É–º—è –æ–ø—Ü–∏—è–º–∏
dynamic_keyboard_expanded = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø—Ü–∏—è 1", callback_data="option_1")],
        [InlineKeyboardButton(text="‚≠ê –û–ø—Ü–∏—è 2", callback_data="option_2")]
    ]
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start (–ó–∞–¥–∞–Ω–∏–µ 1)
@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:",
        reply_markup=start_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /links (–ó–∞–¥–∞–Ω–∏–µ 2)
@dp.message(Command('links'))
async def links_command(message: Message):
    await message.answer(
        "üîó –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å—Å—ã–ª–æ–∫:",
        reply_markup=links_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dynamic (–ó–∞–¥–∞–Ω–∏–µ 3)
@dp.message(Command('dynamic'))
async def dynamic_command(message: Message):
    await message.answer(
        "üîÑ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é:\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ –æ–ø—Ü–∏–π!",
        reply_markup=dynamic_keyboard_initial
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ó–∞–¥–∞–Ω–∏–µ 3)
@dp.callback_query(F.data == "show_more")
async def show_more_options(callback: CallbackQuery):
    await callback.message.edit_text(
        "üîÑ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é:\n"
        "–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–≤–µ –æ–ø—Ü–∏–∏ –Ω–∞ –≤—ã–±–æ—Ä!",
        reply_markup=dynamic_keyboard_expanded
    )
    await callback.answer("–ü–æ–∫–∞–∑–∞–Ω–æ –±–æ–ª—å—à–µ –æ–ø—Ü–∏–π! üéâ")

@dp.callback_query(F.data == "option_1")
async def select_option_1(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ü–∏—é 1!\n"
        "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üëç"
    )
    await callback.answer("–í—ã–±—Ä–∞–Ω–∞ –û–ø—Ü–∏—è 1!")

@dp.callback_query(F.data == "option_2")
async def select_option_2(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚≠ê –í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ü–∏—é 2!\n"
        "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π –≤—ã–±–æ—Ä! ‚≠ê"
    )
    await callback.answer("–í—ã–±—Ä–∞–Ω–∞ –û–ø—Ü–∏—è 2!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é (–ó–∞–¥–∞–Ω–∏–µ 1)
@dp.message(F.text == "–ü—Ä–∏–≤–µ—Ç")
async def hello_button(message: Message):
    user_name = message.from_user.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üòä")

@dp.message(F.text == "–ü–æ–∫–∞")
async def goodbye_button(message: Message):
    user_name = message.from_user.first_name
    await message.answer(f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {user_name}! üëã")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
@dp.message(Command('help'))
async def help_command(message: Message):
    await message.answer(
        "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "/links - –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏\n"
        "/dynamic - –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º!"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def handle_other_messages(message: Message):
    await message.answer(
        "ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã /start, /links, /help"
    )

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())